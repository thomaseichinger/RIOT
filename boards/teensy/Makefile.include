# define the cpu used by the arduino due board
export CPU = mk20dx

# set the teensy default port
export PORT ?= /dev/tty.usbmodem21801

# define tools used for building the project
export PREFIX = arm-none-eabi-
export CC = $(PREFIX)gcc
export AR = $(PREFIX)ar
export AS = $(PREFIX)as
export LINK = $(PREFIX)gcc
export SIZE = $(PREFIX)size
export OBJCOPY = $(PREFIX)objcopy
export TERMPROG = $(RIOTBASE)/dist/tools/pyterm/pyterm.py

# define flash tool depending on the host operating system

OS = $(shell uname)
ifeq ($(OS),Linux)
  FLASHER = $(RIOTBOARD)/$(BOARD)/dist/teensy_post_compile_linux
else ifeq ($(OS),Darwin)
  FLASHER = $(RIOTBOARD)/$(BOARD)/dist/teensy_post_compile_osx
else
  $(info CAUTION: No flash tool for your host system found!)
endif
export FLASHER

ifeq ($(OS),Darwin)
  export FFLAGS_SUB = teensy_reboot_osx
else ifeq ($(OS),Linux)
  export FFLAGS_SUB = teensy_reboot_linux
else
  $(info CAUTION: No flash tool for your host system found!)
endif

# define build specific options
export CPU_USAGE = -mcpu=cortex-m4
export CFLAGS += -ggdb -g3 -std=gnu99 -Os -Wall -Wstrict-prototypes $(CPU_USAGE) -mlittle-endian -mthumb -mthumb-interwork -nostartfiles
export CFLAGS += -DREENTRANT_SYSCALLS_PROVIDED
export ASFLAGS += -ggdb -g3 -mcpu=cortex-m4 $(FPU_USAGE) -mlittle-endian
export LINKFLAGS += -g3 -ggdb -std=gnu99 $(CPU_USAGE) $(FPU_USAGE) -mlittle-endian -static -lgcc -mthumb -mthumb-interwork -nostartfiles
# linkerscript specified in cpu/Makefile.include
export LINKFLAGS += -T$(LINKERSCRIPT)
export OFLAGS += -O binary
export FFLAGS += -file=$(PROJECT).hex -path=bin/$(BOARD)/ -tools=$(RIOTBOARD)/$(BOARD)/dist/; $(RIOTBOARD)/$(BOARD)/dist/$(FFLAGS_SUB) -v


# export board specific includes to the global includes-listing
export INCLUDES += -I$(RIOTBOARD)/$(BOARD)/include
