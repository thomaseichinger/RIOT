*** stock_iot-lab_M3/openwsn/07-App/ohlone/ohlone.c	Thu Apr 24 11:01:37 2014
--- riot-openwsn-wip/openwsn/07-App/ohlone/ohlone.c	Thu Apr 24 16:55:54 2014
***************
*** 9,42 ****
  
  //=========================== variables =======================================
  
- typedef struct {
-    OpenQueueEntry_t*    pkt;
-    bool                 sending;
-    uint16_t             httpChunk;
-    uint8_t              getRequest[TCP_DEFAULT_WINDOW_SIZE];
- } ohlone_vars_t;
- 
  ohlone_vars_t ohlone_vars;
  
  //=========================== prototypes ======================================
  
! void ohlone_sendpkt();
  bool ohlone_check4chars(uint8_t c1[4], uint8_t c2[4]);
  
  //=========================== public ==========================================
  
! void ohlone_init() {
     ohlone_vars.httpChunk = 0;
     ohlone_vars.getRequest[0] = '/';
     ohlone_vars.getRequest[1] = ' ';
     ohlone_webpages_init();
  }
  
! bool ohlone_shouldIlisten() {
     return TRUE;
  }
  
! void ohlone_sendpkt() {
     uint8_t buffer[TCP_DEFAULT_WINDOW_SIZE];
     uint8_t buffer_len;
    
--- 9,35 ----
  
  //=========================== variables =======================================
  
  ohlone_vars_t ohlone_vars;
  
  //=========================== prototypes ======================================
  
! void ohlone_sendpkt(void);
  bool ohlone_check4chars(uint8_t c1[4], uint8_t c2[4]);
  
  //=========================== public ==========================================
  
! void ohlone_init(void) {
     ohlone_vars.httpChunk = 0;
     ohlone_vars.getRequest[0] = '/';
     ohlone_vars.getRequest[1] = ' ';
     ohlone_webpages_init();
  }
  
! bool ohlone_shouldIlisten(void) {
     return TRUE;
  }
  
! void ohlone_sendpkt(void) {
     uint8_t buffer[TCP_DEFAULT_WINDOW_SIZE];
     uint8_t buffer_len;
    
***************
*** 98,104 ****
     openqueue_freePacketBuffer(msg);
  }
  
! void ohlone_sendDone(OpenQueueEntry_t* msg, error_t error) {
     msg->owner = COMPONENT_OHLONE;
     if (msg->creator!=COMPONENT_OHLONE) {
        openserial_printError(COMPONENT_OHLONE,ERR_UNEXPECTED_SENDDONE,
--- 91,97 ----
     openqueue_freePacketBuffer(msg);
  }
  
! void ohlone_sendDone(OpenQueueEntry_t* msg, owerror_t error) {
     msg->owner = COMPONENT_OHLONE;
     if (msg->creator!=COMPONENT_OHLONE) {
        openserial_printError(COMPONENT_OHLONE,ERR_UNEXPECTED_SENDDONE,
***************
*** 110,119 ****
     openqueue_freePacketBuffer(msg);
  }
  
! void ohlone_connectDone(error_t error) {
  }
  
! bool ohlone_debugPrint() {
     return FALSE;
  }
  
--- 103,112 ----
     openqueue_freePacketBuffer(msg);
  }
  
! void ohlone_connectDone(owerror_t error) {
  }
  
! bool ohlone_debugPrint(void) {
     return FALSE;
  }
  
